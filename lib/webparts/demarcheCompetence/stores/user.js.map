{"version":3,"file":"user.js","sourceRoot":"","sources":["../../../../src/webparts/demarcheCompetence/stores/user.ts"],"names":[],"mappings":"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","sourcesContent":["import { defineStore } from 'pinia';\nimport { ref, computed } from 'vue';\nimport type {\n  UserProgress,\n  CompetenceArea\n} from '@types/index';\nimport { UserService, User } from '@services/UserService';\n\nexport const useUserStore = defineStore('user', () => {\n  // State\n  const loading = ref(false);\n  const error = ref<string | null>(null);\n  \n  // User Information\n  const currentUser = ref<User | null>(null);\n  const isAuthenticated = ref(false);\n  \n  // User Progress\n  const userProgress = ref<UserProgress[]>([]);\n  const competenceAreas = ref<(CompetenceArea & { userProgress?: UserProgress })[]>([]);\n  \n  // User Statistics\n  const userStatistics = ref<{\n    totalQuizzesTaken: number;\n    averageQuizScore: number;\n    timeSpentLearning: number;\n    competencesInProgress: number;\n    competencesCompleted: number;\n    lastActivityDate: Date | null;\n  } | null>(null);\n\n  // Overall Progress\n  const overallProgress = ref<{\n    overallPercentage: number;\n    competenceBreakdown: { [area: string]: number };\n    totalAssessments: number;\n    nextAssessmentDue: Date | null;\n  } | null>(null);\n\n  // Upcoming Assessments\n  const upcomingAssessments = ref<{\n    competenceArea: string;\n    assessmentDate: Date;\n    currentLevel: number;\n    targetLevel: number;\n    daysUntilDue: number;\n  }[]>([]);\n\n  // User service instance (will be injected)\n  let userService: UserService | null = null;\n\n  // Computed\n  const isUserLoaded = computed(() => currentUser.value !== null);\n  \n  const userName = computed(() => currentUser.value?.title || 'Utilisateur');\n  \n  const userEmail = computed(() => currentUser.value?.email || '');\n\n  const hasProgress = computed(() => userProgress.value.length > 0);\n\n  const completedCompetences = computed(() => \n    userProgress.value.filter(p => p.progress >= 100).length\n  );\n\n  const inProgressCompetences = computed(() => \n    userProgress.value.filter(p => p.progress > 0 && p.progress < 100).length\n  );\n\n  const notStartedCompetences = computed(() => \n    userProgress.value.filter(p => p.progress === 0).length\n  );\n\n  const averageCompetenceLevel = computed(() => {\n    if (userProgress.value.length === 0) return 0;\n    \n    const totalLevel = userProgress.value.reduce((sum, progress) => sum + progress.currentLevel, 0);\n    return Math.round((totalLevel / userProgress.value.length) * 10) / 10;\n  });\n\n  const nextAssessmentDue = computed(() => {\n    if (upcomingAssessments.value.length === 0) return null;\n    \n    return upcomingAssessments.value\n      .sort((a, b) => a.assessmentDate.getTime() - b.assessmentDate.getTime())[0];\n  });\n\n  const overallCompletionPercentage = computed(() => \n    overallProgress.value?.overallPercentage || 0\n  );\n\n  const isProfileComplete = computed(() => {\n    return currentUser.value && userProgress.value.length > 0;\n  });\n\n  // Actions\n  function setUserService(service: UserService) {\n    userService = service;\n  }\n\n  async function loadCurrentUser() {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      currentUser.value = await userService.getCurrentUser();\n      isAuthenticated.value = true;\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors du chargement de l\\'utilisateur';\n      isAuthenticated.value = false;\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function loadUserProgress(userId?: string) {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      userProgress.value = await userService.loadUserProgress(userId);\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors du chargement des progrès';\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function loadCompetenceAreas() {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      competenceAreas.value = await userService.getCompetenceAreasWithProgress();\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors du chargement des domaines de compétence';\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function loadUserStatistics() {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      userStatistics.value = await userService.getUserStatistics();\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors du chargement des statistiques';\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function loadOverallProgress() {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      overallProgress.value = await userService.calculateOverallProgress();\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors du calcul des progrès globaux';\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function loadUpcomingAssessments(daysAhead: number = 30) {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      upcomingAssessments.value = await userService.getUpcomingAssessments(daysAhead);\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors du chargement des évaluations à venir';\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function saveUserProgress(progress: UserProgress) {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      await userService.saveUserProgress(progress);\n      \n      // Update local state\n      const existingIndex = userProgress.value.findIndex(p => p.competenceArea === progress.competenceArea);\n      if (existingIndex >= 0) {\n        userProgress.value[existingIndex] = progress;\n      } else {\n        userProgress.value.push(progress);\n      }\n      \n      // Refresh related data\n      await Promise.all([\n        loadOverallProgress(),\n        loadUpcomingAssessments()\n      ]);\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors de la sauvegarde des progrès';\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function updateCompetenceLevel(competenceArea: string, newLevel: number, assessmentDate?: Date) {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      await userService.updateCompetenceLevel(competenceArea, newLevel, assessmentDate);\n      \n      // Reload user progress to reflect changes\n      await loadUserProgress();\n      await loadOverallProgress();\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors de la mise à jour du niveau de compétence';\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function setCompetenceTargets(targets: { [competenceArea: string]: number }) {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      await userService.setCompetenceTargets(targets);\n      \n      // Reload user progress to reflect changes\n      await loadUserProgress();\n      await loadOverallProgress();\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors de la définition des objectifs';\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function scheduleAssessment(competenceArea: string, assessmentDate: Date) {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      await userService.scheduleNextAssessment(competenceArea, assessmentDate);\n      \n      // Update local state\n      const progress = userProgress.value.find(p => p.competenceArea === competenceArea);\n      if (progress) {\n        progress.nextAssessment = assessmentDate;\n      }\n      \n      // Refresh upcoming assessments\n      await loadUpcomingAssessments();\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors de la programmation de l\\'évaluation';\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function exportUserData(format: 'json' | 'csv' = 'json') {\n    if (!userService) throw new Error('User service not initialized');\n    \n    loading.value = true;\n    error.value = null;\n    \n    try {\n      await userService.exportUserData(format);\n    } catch (err) {\n      error.value = err instanceof Error ? err.message : 'Erreur lors de l\\'export des données';\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  }\n\n  async function initializeUser() {\n    try {\n      await loadCurrentUser();\n      \n      if (isAuthenticated.value) {\n        // Load all user-related data in parallel\n        await Promise.all([\n          loadUserProgress(),\n          loadCompetenceAreas(),\n          loadUserStatistics(),\n          loadOverallProgress(),\n          loadUpcomingAssessments()\n        ]);\n      }\n    } catch (err) {\n      console.error('Error initializing user:', err);\n      throw err;\n    }\n  }\n\n  async function refreshUserData() {\n    if (!isAuthenticated.value) return;\n    \n    try {\n      await Promise.all([\n        loadUserProgress(),\n        loadUserStatistics(),\n        loadOverallProgress(),\n        loadUpcomingAssessments()\n      ]);\n    } catch (err) {\n      console.error('Error refreshing user data:', err);\n      throw err;\n    }\n  }\n\n  function getProgressForCompetence(competenceArea: string): UserProgress | undefined {\n    return userProgress.value.find(p => p.competenceArea === competenceArea);\n  }\n\n  function getCompetenceAreaById(id: string): (CompetenceArea & { userProgress?: UserProgress }) | undefined {\n    return competenceAreas.value.find(area => area.id === id);\n  }\n\n  function getCompetenceAreaByName(name: string): (CompetenceArea & { userProgress?: UserProgress }) | undefined {\n    return competenceAreas.value.find(area => area.name === name);\n  }\n\n  function calculateProgressPercentage(currentLevel: number, targetLevel: number): number {\n    if (targetLevel === 0) return 0;\n    return Math.min(Math.round((currentLevel / targetLevel) * 100), 100);\n  }\n\n  function getNextMilestone(competenceArea: string): { level: number; title: string; description: string } | null {\n    const progress = getProgressForCompetence(competenceArea);\n    const area = getCompetenceAreaByName(competenceArea);\n    \n    if (!progress || !area) return null;\n    \n    const nextLevel = progress.currentLevel + 1;\n    const milestone = area.levels.find(level => level.level === nextLevel);\n    \n    return milestone ? {\n      level: milestone.level,\n      title: milestone.title,\n      description: milestone.description\n    } : null;\n  }\n\n  function getDaysUntilNextAssessment(competenceArea: string): number | null {\n    const progress = getProgressForCompetence(competenceArea);\n    if (!progress) return null;\n    \n    const today = new Date();\n    const nextAssessment = new Date(progress.nextAssessment);\n    const diffTime = nextAssessment.getTime() - today.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    return diffDays;\n  }\n\n  function isAssessmentOverdue(competenceArea: string): boolean {\n    const daysUntil = getDaysUntilNextAssessment(competenceArea);\n    return daysUntil !== null && daysUntil < 0;\n  }\n\n  function getCompetencesByProgress(): {\n    completed: UserProgress[];\n    inProgress: UserProgress[];\n    notStarted: UserProgress[];\n  } {\n    return {\n      completed: userProgress.value.filter(p => p.progress >= 100),\n      inProgress: userProgress.value.filter(p => p.progress > 0 && p.progress < 100),\n      notStarted: userProgress.value.filter(p => p.progress === 0)\n    };\n  }\n\n  function getRecentActivity(days: number = 30): UserProgress[] {\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - days);\n    \n    return userProgress.value\n      .filter(p => new Date(p.lastAssessment) >= cutoffDate)\n      .sort((a, b) => new Date(b.lastAssessment).getTime() - new Date(a.lastAssessment).getTime());\n  }\n\n  // Clear all data\n  function clearAllData() {\n    currentUser.value = null;\n    isAuthenticated.value = false;\n    userProgress.value = [];\n    competenceAreas.value = [];\n    userStatistics.value = null;\n    overallProgress.value = null;\n    upcomingAssessments.value = [];\n    error.value = null;\n  }\n\n  function logout() {\n    clearAllData();\n  }\n\n  // Error handling\n  function clearError() {\n    error.value = null;\n  }\n\n  function setError(message: string) {\n    error.value = message;\n  }\n\n  return {\n    // State\n    loading,\n    error,\n    currentUser,\n    isAuthenticated,\n    userProgress,\n    competenceAreas,\n    userStatistics,\n    overallProgress,\n    upcomingAssessments,\n\n    // Computed\n    isUserLoaded,\n    userName,\n    userEmail,\n    hasProgress,\n    completedCompetences,\n    inProgressCompetences,\n    notStartedCompetences,\n    averageCompetenceLevel,\n    nextAssessmentDue,\n    overallCompletionPercentage,\n    isProfileComplete,\n\n    // Actions\n    setUserService,\n    loadCurrentUser,\n    loadUserProgress,\n    loadCompetenceAreas,\n    loadUserStatistics,\n    loadOverallProgress,\n    loadUpcomingAssessments,\n    saveUserProgress,\n    updateCompetenceLevel,\n    setCompetenceTargets,\n    scheduleAssessment,\n    exportUserData,\n    initializeUser,\n    refreshUserData,\n    getProgressForCompetence,\n    getCompetenceAreaById,\n    getCompetenceAreaByName,\n    calculateProgressPercentage,\n    getNextMilestone,\n    getDaysUntilNextAssessment,\n    isAssessmentOverdue,\n    getCompetencesByProgress,\n    getRecentActivity,\n    clearAllData,\n    logout,\n    clearError,\n    setError\n  };\n});"]}