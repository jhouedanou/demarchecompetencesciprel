{"version":3,"file":"app.js","sourceRoot":"","sources":["../../../../src/webparts/demarcheCompetence/stores/app.ts"],"names":[],"mappings":"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","sourcesContent":["import { defineStore } from 'pinia';\nimport { ref, computed } from 'vue';\n\nexport type AppTheme = 'light' | 'dark' | 'auto';\nexport type AppLanguage = 'fr' | 'en';\nexport type AppView = 'dashboard' | 'quiz-introduction' | 'quiz-sondage' | 'progress' | 'competences' | 'results' | 'settings';\n\nexport interface AppNotification {\n  id: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  title: string;\n  message: string;\n  duration?: number;\n  persistent?: boolean;\n  timestamp: Date;\n}\n\nexport interface AppSettings {\n  theme: AppTheme;\n  language: AppLanguage;\n  autoSaveInterval: number; // in seconds\n  showNotifications: boolean;\n  soundEnabled: boolean;\n  animationsEnabled: boolean;\n  compactMode: boolean;\n}\n\nexport const useAppStore = defineStore('app', () => {\n  // State\n  const loading = ref(false);\n  const initialized = ref(false);\n  const error = ref<string | null>(null);\n  \n  // Current view and navigation\n  const currentView = ref<AppView>('dashboard');\n  const previousView = ref<AppView | null>(null);\n  const navigationHistory = ref<AppView[]>([]);\n  \n  // App settings\n  const settings = ref<AppSettings>({\n    theme: 'auto',\n    language: 'fr',\n    autoSaveInterval: 30,\n    showNotifications: true,\n    soundEnabled: true,\n    animationsEnabled: true,\n    compactMode: false\n  });\n\n  // Notifications\n  const notifications = ref<AppNotification[]>([]);\n  \n  // Application state\n  const isOnline = ref(navigator.onLine);\n  const isMobile = ref(window.innerWidth <= 768);\n  const sidebarOpen = ref(!isMobile.value);\n  \n  // Performance tracking\n  const performanceMetrics = ref<{\n    loadTimes: { [key: string]: number };\n    errorCounts: { [key: string]: number };\n    lastSync: Date | null;\n  }>({\n    loadTimes: {},\n    errorCounts: {},\n    lastSync: null\n  });\n\n  // Computed\n  const hasNotifications = computed(() => notifications.value.length > 0);\n  \n  const unreadNotifications = computed(() => \n    notifications.value.filter(n => !n.persistent)\n  );\n\n  const errorNotifications = computed(() => \n    notifications.value.filter(n => n.type === 'error')\n  );\n\n  const currentTheme = computed(() => {\n    if (settings.value.theme === 'auto') {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    return settings.value.theme;\n  });\n\n  const isOffline = computed(() => !isOnline.value);\n\n  const canGoBack = computed(() => navigationHistory.value.length > 1);\n\n  // Actions\n  function setLoading(value: boolean) {\n    loading.value = value;\n  }\n\n  function setInitialized(value: boolean) {\n    initialized.value = value;\n  }\n\n  function setError(message: string | null) {\n    error.value = message;\n    \n    if (message) {\n      addNotification({\n        type: 'error',\n        title: 'Erreur',\n        message,\n        persistent: true\n      });\n    }\n  }\n\n  function clearError() {\n    error.value = null;\n  }\n\n  function navigateTo(view: AppView, addToHistory: boolean = true) {\n    if (addToHistory && currentView.value !== view) {\n      navigationHistory.value.push(currentView.value);\n      // Keep history limited to last 10 views\n      if (navigationHistory.value.length > 10) {\n        navigationHistory.value.shift();\n      }\n    }\n    \n    previousView.value = currentView.value;\n    currentView.value = view;\n  }\n\n  function goBack() {\n    if (canGoBack.value) {\n      const previousViewFromHistory = navigationHistory.value.pop();\n      if (previousViewFromHistory) {\n        previousView.value = currentView.value;\n        currentView.value = previousViewFromHistory;\n      }\n    }\n  }\n\n  function addNotification(notification: Omit<AppNotification, 'id' | 'timestamp'>) {\n    const newNotification: AppNotification = {\n      ...notification,\n      id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n      timestamp: new Date()\n    };\n\n    notifications.value.unshift(newNotification);\n\n    // Auto-remove non-persistent notifications\n    if (!notification.persistent) {\n      const duration = notification.duration || 5000;\n      setTimeout(() => {\n        removeNotification(newNotification.id);\n      }, duration);\n    }\n\n    // Keep only last 50 notifications\n    if (notifications.value.length > 50) {\n      notifications.value = notifications.value.slice(0, 50);\n    }\n  }\n\n  function removeNotification(id: string) {\n    const index = notifications.value.findIndex(n => n.id === id);\n    if (index >= 0) {\n      notifications.value.splice(index, 1);\n    }\n  }\n\n  function clearNotifications() {\n    notifications.value = [];\n  }\n\n  function clearNonPersistentNotifications() {\n    notifications.value = notifications.value.filter(n => n.persistent);\n  }\n\n  function updateSettings(newSettings: Partial<AppSettings>) {\n    settings.value = { ...settings.value, ...newSettings };\n    saveSettingsToStorage();\n    \n    // Apply theme changes immediately\n    if (newSettings.theme) {\n      applyTheme();\n    }\n  }\n\n  function loadSettingsFromStorage() {\n    try {\n      const savedSettings = localStorage.getItem('demarcheCompetence_settings');\n      if (savedSettings) {\n        const parsed = JSON.parse(savedSettings);\n        settings.value = { ...settings.value, ...parsed };\n      }\n    } catch (error) {\n      console.warn('Could not load settings from storage:', error);\n    }\n  }\n\n  function saveSettingsToStorage() {\n    try {\n      localStorage.setItem('demarcheCompetence_settings', JSON.stringify(settings.value));\n    } catch (error) {\n      console.warn('Could not save settings to storage:', error);\n    }\n  }\n\n  function applyTheme() {\n    const theme = currentTheme.value;\n    document.documentElement.setAttribute('data-theme', theme);\n    document.documentElement.classList.toggle('dark', theme === 'dark');\n  }\n\n  function toggleSidebar() {\n    sidebarOpen.value = !sidebarOpen.value;\n  }\n\n  function setSidebarOpen(open: boolean) {\n    sidebarOpen.value = open;\n  }\n\n  function updateOnlineStatus() {\n    isOnline.value = navigator.onLine;\n    \n    if (isOnline.value) {\n      addNotification({\n        type: 'success',\n        title: 'Connexion rétablie',\n        message: 'Vous êtes maintenant en ligne',\n        duration: 3000\n      });\n    } else {\n      addNotification({\n        type: 'warning',\n        title: 'Connexion perdue',\n        message: 'Vous êtes hors ligne. Certaines fonctionnalités peuvent être limitées.',\n        persistent: true\n      });\n    }\n  }\n\n  function updateMobileStatus() {\n    const wasMobile = isMobile.value;\n    isMobile.value = window.innerWidth <= 768;\n    \n    // Auto-close sidebar on mobile\n    if (isMobile.value && !wasMobile) {\n      sidebarOpen.value = false;\n    } else if (!isMobile.value && wasMobile) {\n      sidebarOpen.value = true;\n    }\n  }\n\n  function trackPerformance(operation: string, duration: number) {\n    performanceMetrics.value.loadTimes[operation] = duration;\n  }\n\n  function trackError(operation: string) {\n    performanceMetrics.value.errorCounts[operation] = \n      (performanceMetrics.value.errorCounts[operation] || 0) + 1;\n  }\n\n  function updateLastSync() {\n    performanceMetrics.value.lastSync = new Date();\n  }\n\n  async function initializeApp() {\n    try {\n      setLoading(true);\n      \n      // Load settings from storage\n      loadSettingsFromStorage();\n      \n      // Apply initial theme\n      applyTheme();\n      \n      // Set up event listeners\n      window.addEventListener('online', updateOnlineStatus);\n      window.addEventListener('offline', updateOnlineStatus);\n      window.addEventListener('resize', updateMobileStatus);\n      \n      // Theme change listener\n      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\n        if (settings.value.theme === 'auto') {\n          applyTheme();\n        }\n      });\n\n      setInitialized(true);\n      \n      addNotification({\n        type: 'success',\n        title: 'Application initialisée',\n        message: 'Bienvenue dans la démarche compétence CIPREL',\n        duration: 3000\n      });\n      \n    } catch (err) {\n      const message = err instanceof Error ? err.message : 'Erreur lors de l\\'initialisation';\n      setError(message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  function cleanup() {\n    // Remove event listeners\n    window.removeEventListener('online', updateOnlineStatus);\n    window.removeEventListener('offline', updateOnlineStatus);\n    window.removeEventListener('resize', updateMobileStatus);\n    \n    // Clear notifications\n    clearNotifications();\n    \n    // Reset state\n    initialized.value = false;\n    currentView.value = 'dashboard';\n    navigationHistory.value = [];\n    error.value = null;\n  }\n\n  function resetApp() {\n    // Clear all stored data\n    localStorage.removeItem('demarcheCompetence_settings');\n    \n    // Reset to default settings\n    settings.value = {\n      theme: 'auto',\n      language: 'fr',\n      autoSaveInterval: 30,\n      showNotifications: true,\n      soundEnabled: true,\n      animationsEnabled: true,\n      compactMode: false\n    };\n    \n    // Clear notifications and navigation\n    clearNotifications();\n    navigationHistory.value = [];\n    currentView.value = 'dashboard';\n    \n    // Apply default theme\n    applyTheme();\n    \n    addNotification({\n      type: 'info',\n      title: 'Application réinitialisée',\n      message: 'Les paramètres ont été remis à zéro',\n      duration: 3000\n    });\n  }\n\n  function showSuccessMessage(message: string, title: string = 'Succès') {\n    addNotification({\n      type: 'success',\n      title,\n      message,\n      duration: 4000\n    });\n  }\n\n  function showErrorMessage(message: string, title: string = 'Erreur') {\n    addNotification({\n      type: 'error',\n      title,\n      message,\n      persistent: true\n    });\n  }\n\n  function showWarningMessage(message: string, title: string = 'Attention') {\n    addNotification({\n      type: 'warning',\n      title,\n      message,\n      duration: 6000\n    });\n  }\n\n  function showInfoMessage(message: string, title: string = 'Information') {\n    addNotification({\n      type: 'info',\n      title,\n      message,\n      duration: 5000\n    });\n  }\n\n  return {\n    // State\n    loading,\n    initialized,\n    error,\n    currentView,\n    previousView,\n    navigationHistory,\n    settings,\n    notifications,\n    isOnline,\n    isMobile,\n    sidebarOpen,\n    performanceMetrics,\n\n    // Computed\n    hasNotifications,\n    unreadNotifications,\n    errorNotifications,\n    currentTheme,\n    isOffline,\n    canGoBack,\n\n    // Actions\n    setLoading,\n    setInitialized,\n    setError,\n    clearError,\n    navigateTo,\n    goBack,\n    addNotification,\n    removeNotification,\n    clearNotifications,\n    clearNonPersistentNotifications,\n    updateSettings,\n    loadSettingsFromStorage,\n    saveSettingsToStorage,\n    applyTheme,\n    toggleSidebar,\n    setSidebarOpen,\n    updateOnlineStatus,\n    updateMobileStatus,\n    trackPerformance,\n    trackError,\n    updateLastSync,\n    initializeApp,\n    cleanup,\n    resetApp,\n    showSuccessMessage,\n    showErrorMessage,\n    showWarningMessage,\n    showInfoMessage\n  };\n});"]}