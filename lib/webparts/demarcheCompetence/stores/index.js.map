{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/webparts/demarcheCompetence/stores/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { createPinia } from 'pinia';\nimport { App } from 'vue';\nimport { WebPartContext } from '@microsoft/sp-webpart-base';\n\n// Import stores\nexport { useAppStore } from './app';\nexport { useQuizStore } from './quiz';\nexport { useUserStore } from './user';\n\n// Import services\nimport { SharePointService } from '@services/SharePointService';\nimport { QuizService } from '@services/QuizService';\nimport { UserService } from '@services/UserService';\n\n// Create pinia instance\nexport const pinia = createPinia();\n\n// Service instances\nlet sharePointService: SharePointService;\nlet quizService: QuizService;\nlet userService: UserService;\n\n/**\n * Initialize stores with SharePoint context and services\n */\nexport function initializeStores(context: WebPartContext) {\n  // Initialize services\n  sharePointService = new SharePointService(context);\n  quizService = new QuizService(sharePointService);\n  userService = new UserService(sharePointService);\n\n  // The stores will be initialized when first accessed\n  // We'll provide the services through the store actions\n}\n\n/**\n * Get service instances\n */\nexport function getServices() {\n  return {\n    sharePointService,\n    quizService,\n    userService\n  };\n}\n\n/**\n * Setup stores for Vue app\n */\nexport function setupStores(app: App, context: WebPartContext) {\n  // Install Pinia\n  app.use(pinia);\n\n  // Initialize services\n  initializeStores(context);\n\n  return {\n    pinia,\n    services: getServices()\n  };\n}\n\n/**\n * Store utilities for common operations\n */\n\nimport { useAppStore } from './app';\nimport { useQuizStore } from './quiz';\nimport { useUserStore } from './user';\n\n/**\n * Initialize all stores with their respective services\n */\nexport async function initializeAllStores() {\n  const appStore = useAppStore();\n  const quizStore = useQuizStore();\n  const userStore = useUserStore();\n\n  try {\n    // Initialize app store first\n    await appStore.initializeApp();\n\n    // Set services in stores\n    quizStore.setQuizService(quizService);\n    userStore.setUserService(userService);\n\n    // Initialize user store\n    await userStore.initializeUser();\n\n    appStore.showSuccessMessage('Application initialisée avec succès');\n  } catch (error) {\n    console.error('Error initializing stores:', error);\n    appStore.showErrorMessage(\n      error instanceof Error ? error.message : 'Erreur lors de l\\'initialisation'\n    );\n    throw error;\n  }\n}\n\n/**\n * Reset all stores to initial state\n */\nexport function resetAllStores() {\n  const appStore = useAppStore();\n  const quizStore = useQuizStore();\n  const userStore = useUserStore();\n\n  quizStore.clearAllData();\n  userStore.clearAllData();\n  appStore.resetApp();\n}\n\n/**\n * Check if all required data is loaded\n */\nexport function isDataLoaded(): boolean {\n  const userStore = useUserStore();\n  const quizStore = useQuizStore();\n\n  return userStore.isAuthenticated && \n         userStore.isUserLoaded &&\n         (quizStore.hasIntroductionQuestions || quizStore.hasSondageQuestions);\n}\n\n/**\n * Refresh all store data\n */\nexport async function refreshAllData() {\n  const appStore = useAppStore();\n  const quizStore = useQuizStore();\n  const userStore = useUserStore();\n\n  try {\n    appStore.setLoading(true);\n\n    await Promise.all([\n      userStore.refreshUserData(),\n      quizStore.loadUserResults(),\n      // Refresh other data as needed\n    ]);\n\n    appStore.updateLastSync();\n    appStore.showSuccessMessage('Données actualisées');\n  } catch (error) {\n    console.error('Error refreshing data:', error);\n    appStore.showErrorMessage(\n      error instanceof Error ? error.message : 'Erreur lors de l\\'actualisation'\n    );\n    throw error;\n  } finally {\n    appStore.setLoading(false);\n  }\n}\n\n/**\n * Handle store errors globally\n */\nexport function handleStoreError(error: Error, operation: string) {\n  const appStore = useAppStore();\n  \n  console.error(`Store error in ${operation}:`, error);\n  \n  appStore.trackError(operation);\n  appStore.showErrorMessage(\n    error.message || 'Une erreur inattendue s\\'est produite',\n    `Erreur - ${operation}`\n  );\n}\n\n/**\n * Track performance for store operations\n */\nexport function trackStoreOperation<T>(\n  operation: string,\n  fn: () => Promise<T>\n): Promise<T> {\n  const appStore = useAppStore();\n  const startTime = performance.now();\n\n  return fn()\n    .then(result => {\n      const duration = performance.now() - startTime;\n      appStore.trackPerformance(operation, duration);\n      return result;\n    })\n    .catch(error => {\n      appStore.trackError(operation);\n      throw error;\n    });\n}\n\n/**\n * Store middleware for automatic error handling\n */\nexport function withErrorHandling<T extends any[], R>(\n  operation: string,\n  fn: (...args: T) => Promise<R>\n) {\n  return async (...args: T): Promise<R> => {\n    try {\n      return await trackStoreOperation(operation, () => fn(...args));\n    } catch (error) {\n      handleStoreError(error as Error, operation);\n      throw error;\n    }\n  };\n}\n\n/**\n * Batch operations utility\n */\nexport async function batchOperations<T>(\n  operations: Array<() => Promise<T>>,\n  concurrency: number = 3\n): Promise<T[]> {\n  const results: T[] = [];\n  \n  for (let i = 0; i < operations.length; i += concurrency) {\n    const batch = operations.slice(i, i + concurrency);\n    const batchResults = await Promise.all(batch.map(op => op()));\n    results.push(...batchResults);\n  }\n  \n  return results;\n}\n\n/**\n * Retry operation utility\n */\nexport async function retryOperation<T>(\n  operation: () => Promise<T>,\n  maxRetries: number = 3,\n  delay: number = 1000\n): Promise<T> {\n  let lastError: Error;\n\n  for (let i = 0; i <= maxRetries; i++) {\n    try {\n      return await operation();\n    } catch (error) {\n      lastError = error as Error;\n      \n      if (i === maxRetries) {\n        throw lastError;\n      }\n\n      // Wait before retrying\n      await new Promise(resolve => setTimeout(resolve, delay * Math.pow(2, i)));\n    }\n  }\n\n  throw lastError!;\n}\n\n/**\n * Cache management for stores\n */\nexport class StoreCache {\n  private cache = new Map<string, { data: any; timestamp: number; ttl: number }>();\n\n  async get<T>(\n    key: string,\n    fetcher: () => Promise<T>,\n    ttl: number = 300000 // 5 minutes default\n  ): Promise<T> {\n    const cached = this.cache.get(key);\n    const now = Date.now();\n\n    if (cached && (now - cached.timestamp) < cached.ttl) {\n      return cached.data;\n    }\n\n    const data = await fetcher();\n    this.cache.set(key, { data, timestamp: now, ttl });\n    return data;\n  }\n\n  invalidate(key: string): void {\n    this.cache.delete(key);\n  }\n\n  clear(): void {\n    this.cache.clear();\n  }\n\n  size(): number {\n    return this.cache.size;\n  }\n}\n\n// Global cache instance\nexport const storeCache = new StoreCache();\n\n/**\n * Type definitions for store composition\n */\nexport interface StoreComposition {\n  app: ReturnType<typeof useAppStore>;\n  quiz: ReturnType<typeof useQuizStore>;\n  user: ReturnType<typeof useUserStore>;\n}\n\n/**\n * Compose all stores for easier access\n */\nexport function useStores(): StoreComposition {\n  return {\n    app: useAppStore(),\n    quiz: useQuizStore(),\n    user: useUserStore()\n  };\n}"]}