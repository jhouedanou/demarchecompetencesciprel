{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/webparts/demarcheCompetence/stores/index.ts"],"names":[],"mappings":"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","sourcesContent":["import Vuex from 'vuex';\nimport { WebPartContext } from '@microsoft/sp-webpart-base';\n\n// Import services\nimport { SharePointService } from '@services/SharePointService';\nimport { QuizService } from '@services/QuizService';\nimport { UserService } from '@services/UserService';\n\n// Import store modules\nimport { appModule, AppState } from './app';\nimport { quizModule, QuizState } from './quiz';\nimport { userModule, UserState } from './user';\n\n// Vue.use(Vuex) is not needed for manual store creation\n\n// Root state interface\nexport interface RootState {\n  app: AppState;\n  quiz: QuizState;\n  user: UserState;\n}\n\n// Service instances\nlet sharePointService: SharePointService;\nlet quizService: QuizService;\nlet userService: UserService;\n\n// Create Vuex store\nexport const store = new Vuex.Store<RootState>({\n  modules: {\n    app: appModule,\n    quiz: quizModule,\n    user: userModule\n  },\n  strict: process.env.NODE_ENV !== 'production'\n});\n\n/**\n * Initialize services and stores with SharePoint context\n */\nexport function initializeStores(context: WebPartContext) {\n  // Initialize services\n  sharePointService = new SharePointService(context);\n  quizService = new QuizService(sharePointService);\n  userService = new UserService(sharePointService);\n\n  // Set services in store\n  store.dispatch('app/setServices', { sharePointService, quizService, userService });\n  store.dispatch('quiz/setQuizService', quizService);\n  store.dispatch('user/setUserService', userService);\n}\n\n/**\n * Get service instances\n */\nexport function getServices() {\n  return {\n    sharePointService,\n    quizService,\n    userService\n  };\n}\n\n/**\n * Setup stores for Vue app\n */\nexport function setupStores(app: any, context: WebPartContext) {\n  // Initialize services\n  initializeStores(context);\n\n  return {\n    store,\n    services: getServices()\n  };\n}\n\n/**\n * Initialize all stores with their respective services\n */\nexport async function initializeAllStores() {\n  try {\n    // Initialize app store first\n    await store.dispatch('app/initializeApp');\n\n    // Initialize user store\n    await store.dispatch('user/initializeUser');\n\n    store.dispatch('app/showSuccessMessage', 'Application initialisée avec succès');\n  } catch (error) {\n    console.error('Error initializing stores:', error);\n    store.dispatch('app/showErrorMessage', {\n      message: error instanceof Error ? error.message : 'Erreur lors de l\\'initialisation'\n    });\n    throw error;\n  }\n}\n\n/**\n * Reset all stores to initial state\n */\nexport function resetAllStores() {\n  store.dispatch('quiz/clearAllData');\n  store.dispatch('user/clearAllData');\n  store.dispatch('app/resetApp');\n}\n\n/**\n * Check if all required data is loaded\n */\nexport function isDataLoaded(): boolean {\n  const state = store.state;\n  return state.user.isAuthenticated && \n         state.user.isUserLoaded &&\n         (state.quiz.introductionQuestions.length > 0 || state.quiz.sondageQuestions.length > 0);\n}\n\n/**\n * Refresh all store data\n */\nexport async function refreshAllData() {\n  try {\n    store.dispatch('app/setLoading', true);\n\n    await Promise.all([\n      store.dispatch('user/refreshUserData'),\n      store.dispatch('quiz/loadUserResults'),\n    ]);\n\n    store.dispatch('app/updateLastSync');\n    store.dispatch('app/showSuccessMessage', 'Données actualisées');\n  } catch (error) {\n    console.error('Error refreshing data:', error);\n    store.dispatch('app/showErrorMessage', {\n      message: error instanceof Error ? error.message : 'Erreur lors de l\\'actualisation'\n    });\n    throw error;\n  } finally {\n    store.dispatch('app/setLoading', false);\n  }\n}\n\n/**\n * Handle store errors globally\n */\nexport function handleStoreError(error: Error, operation: string) {\n  console.error(`Store error in ${operation}:`, error);\n  \n  store.dispatch('app/trackError', operation);\n  store.dispatch('app/showErrorMessage', {\n    message: error.message || 'Une erreur inattendue s\\'est produite',\n    title: `Erreur - ${operation}`\n  });\n}\n\n/**\n * Track performance for store operations\n */\nexport function trackStoreOperation<T>(\n  operation: string,\n  fn: () => Promise<T>\n): Promise<T> {\n  const startTime = performance.now();\n\n  return fn()\n    .then(result => {\n      const duration = performance.now() - startTime;\n      store.dispatch('app/trackPerformance', { operation, duration });\n      return result;\n    })\n    .catch(error => {\n      store.dispatch('app/trackError', operation);\n      throw error;\n    });\n}\n\n/**\n * Store middleware for automatic error handling\n */\nexport function withErrorHandling<T extends any[], R>(\n  operation: string,\n  fn: (...args: T) => Promise<R>\n) {\n  return async (...args: T): Promise<R> => {\n    try {\n      return await trackStoreOperation(operation, () => fn(...args));\n    } catch (error) {\n      handleStoreError(error as Error, operation);\n      throw error;\n    }\n  };\n}\n\n/**\n * Cache management for stores\n */\nexport class StoreCache {\n  private cache = new Map<string, { data: any; timestamp: number; ttl: number }>();\n\n  async get<T>(\n    key: string,\n    fetcher: () => Promise<T>,\n    ttl: number = 300000 // 5 minutes default\n  ): Promise<T> {\n    const cached = this.cache.get(key);\n    const now = Date.now();\n\n    if (cached && (now - cached.timestamp) < cached.ttl) {\n      return cached.data;\n    }\n\n    const data = await fetcher();\n    this.cache.set(key, { data, timestamp: now, ttl });\n    return data;\n  }\n\n  invalidate(key: string): void {\n    this.cache.delete(key);\n  }\n\n  clear(): void {\n    this.cache.clear();\n  }\n\n  size(): number {\n    return this.cache.size;\n  }\n}\n\n// Global cache instance\nexport const storeCache = new StoreCache();\n\n// Export store for component access\nexport default store;"]}