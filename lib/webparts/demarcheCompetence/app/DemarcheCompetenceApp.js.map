{"version":3,"file":"DemarcheCompetenceApp.js","sourceRoot":"","sources":["../../../../src/webparts/demarcheCompetence/app/DemarcheCompetenceApp.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '@stores/index';\nimport { \n  setCurrentView, \n  addNotification, \n  removeNotification, \n  clearNotifications,\n  updateSettings\n} from '@stores/index';\n\nimport {\n  Stack,\n  Spinner,\n  SpinnerSize,\n  MessageBar,\n  MessageBarType,\n  CommandBar,\n  ICommandBarItemProps,\n  Panel,\n  PanelType,\n  DefaultButton,\n  PrimaryButton,\n  Text,\n  ThemeProvider,\n  PartialTheme,\n  Separator\n} from '@fluentui/react';\n\nimport { WebPartContext } from '@microsoft/sp-webpart-base';\n\n// Import child components (you'll need to create these)\nimport Dashboard from '@components/Dashboard';\nimport QuizIntroduction from '@components/QuizIntroduction';\nimport QuizSondage from '@components/QuizSondage';\nimport ProgressTracker from '@components/ProgressTracker';\n\ninterface Props {\n  webPartProperties: any;\n  webPartContext: WebPartContext;\n  domElement: HTMLElement;\n}\n\nconst customTheme: PartialTheme = {\n  palette: {\n    themePrimary: '#0078d4',\n    themeSecondary: '#106ebe',\n    themeDarkAlt: '#005a9e',\n    neutralLight: '#f3f2f1',\n    neutralLighter: '#faf9f8',\n    white: '#ffffff'\n  }\n};\n\nconst DemarcheCompetenceApp: React.FC<Props> = ({\n  webPartProperties,\n  webPartContext,\n  domElement\n}) => {\n  const dispatch = useDispatch();\n  \n  // Redux state\n  const app = useSelector((state: RootState) => state.app);\n  const user = useSelector((state: RootState) => state.user);\n  const quiz = useSelector((state: RootState) => state.quiz);\n\n  // Local state\n  const [showSettings, setShowSettings] = React.useState(false);\n  const [showNotifications, setShowNotifications] = React.useState(false);\n\n  // Navigation items\n  const navigationItems: ICommandBarItemProps[] = [\n    {\n      key: 'dashboard',\n      text: 'Tableau de bord',\n      iconProps: { iconName: 'Home' },\n      onClick: () => {\n        dispatch(setCurrentView('dashboard'));\n      }\n    },\n    {\n      key: 'quiz-introduction',\n      text: 'Quiz d\\'introduction',\n      iconProps: { iconName: 'TestBeaker' },\n      onClick: () => {\n        dispatch(setCurrentView('quiz-introduction'));\n      },\n      disabled: !user.isAuthenticated\n    },\n    {\n      key: 'quiz-sondage',\n      text: 'Sondage compétences',\n      iconProps: { iconName: 'Survey' },\n      onClick: () => {\n        dispatch(setCurrentView('quiz-sondage'));\n      },\n      disabled: !user.isAuthenticated\n    },\n    {\n      key: 'progress',\n      text: 'Suivi des progrès',\n      iconProps: { iconName: 'ProgressRingDots' },\n      onClick: () => {\n        dispatch(setCurrentView('progress'));\n      },\n      disabled: !user.isAuthenticated\n    }\n  ];\n\n  const farItems: ICommandBarItemProps[] = [\n    {\n      key: 'notifications',\n      text: `Notifications (${app.notifications.length})`,\n      iconProps: { iconName: 'Ringer' },\n      onClick: () => setShowNotifications(true)\n    },\n    {\n      key: 'settings',\n      text: 'Paramètres',\n      iconProps: { iconName: 'Settings' },\n      onClick: () => setShowSettings(true)\n    }\n  ];\n\n  // Handle notification dismiss\n  const handleDismissNotification = (id: string) => {\n    dispatch(removeNotification(id));\n  };\n\n  // Render loading state\n  if (app.loading && !app.initialized) {\n    return (\n      <ThemeProvider theme={customTheme}>\n        <Stack\n          horizontalAlign=\"center\"\n          verticalAlign=\"center\"\n          styles={{ root: { height: '400px', background: '#f3f2f1' } }}\n        >\n          <Spinner size={SpinnerSize.large} label=\"Chargement en cours...\" />\n          <Text variant=\"medium\" styles={{ root: { marginTop: 20 } }}>\n            Initialisation de l'application\n          </Text>\n        </Stack>\n      </ThemeProvider>\n    );\n  }\n\n  // Render error state\n  if (app.error && !app.initialized) {\n    return (\n      <ThemeProvider theme={customTheme}>\n        <Stack\n          horizontalAlign=\"center\"\n          verticalAlign=\"center\"\n          styles={{ root: { height: '400px', padding: 40, background: '#f3f2f1' } }}\n        >\n          <MessageBar messageBarType={MessageBarType.error} isMultiline>\n            <strong>Erreur d'Application</strong><br />\n            {app.error}\n          </MessageBar>\n          <PrimaryButton\n            text=\"Réessayer\"\n            onClick={() => window.location.reload()}\n            styles={{ root: { marginTop: 20 } }}\n          />\n        </Stack>\n      </ThemeProvider>\n    );\n  }\n\n  // Main render\n  return (\n    <ThemeProvider theme={customTheme}>\n      <Stack styles={{ root: { height: '100%', minHeight: '400px' } }}>\n        \n        {/* Header / Navigation */}\n        <CommandBar\n          items={navigationItems}\n          farItems={farItems}\n          styles={{\n            root: {\n              padding: '0 20px',\n              backgroundColor: customTheme.palette?.neutralLighter\n            }\n          }}\n        />\n\n        {/* Active notifications */}\n        {app.notifications.length > 0 && (\n          <Stack tokens={{ childrenGap: 10 }} styles={{ root: { padding: '10px 20px' } }}>\n            {app.notifications.slice(0, 3).map((notification) => (\n              <MessageBar\n                key={notification.id}\n                messageBarType={\n                  notification.type === 'success' ? MessageBarType.success :\n                  notification.type === 'error' ? MessageBarType.error :\n                  notification.type === 'warning' ? MessageBarType.warning :\n                  MessageBarType.info\n                }\n                onDismiss={() => handleDismissNotification(notification.id)}\n                isMultiline={false}\n              >\n                <strong>{notification.title}</strong>: {notification.message}\n              </MessageBar>\n            ))}\n          </Stack>\n        )}\n\n        {/* Main Content */}\n        <Stack.Item grow styles={{ root: { padding: '20px', overflow: 'auto' } }}>\n          {app.currentView === 'dashboard' && (\n            <Dashboard\n              user={user.currentUser}\n              canStartIntro={user.isAuthenticated}\n              canStartSurvey={user.isAuthenticated}\n              onNavigate={(view: string) => dispatch(setCurrentView(view))}\n            />\n          )}\n          \n          {app.currentView === 'quiz-introduction' && (\n            <QuizIntroduction\n              onNavigate={(view: string) => dispatch(setCurrentView(view))}\n            />\n          )}\n          \n          {app.currentView === 'quiz-sondage' && (\n            <QuizSondage\n              onNavigate={(view: string) => dispatch(setCurrentView(view))}\n            />\n          )}\n          \n          {app.currentView === 'progress' && (\n            <ProgressTracker\n              onNavigate={(view: string) => dispatch(setCurrentView(view))}\n            />\n          )}\n\n          {/* Fallback content */}\n          {!['dashboard', 'quiz-introduction', 'quiz-sondage', 'progress'].includes(app.currentView) && (\n            <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 20 }}>\n              <Text variant=\"xLarge\">🚀 Démarche Compétence CIPREL</Text>\n              <Text variant=\"large\">Application de gestion des compétences</Text>\n              <Separator />\n              <PrimaryButton\n                text=\"Aller au tableau de bord\"\n                onClick={() => dispatch(setCurrentView('dashboard'))}\n              />\n            </Stack>\n          )}\n        </Stack.Item>\n\n        {/* Settings Panel */}\n        <Panel\n          isOpen={showSettings}\n          onDismiss={() => setShowSettings(false)}\n          type={PanelType.medium}\n          headerText=\"Paramètres\"\n        >\n          <Stack tokens={{ childrenGap: 20 }} styles={{ root: { padding: '20px 0' } }}>\n            <Text variant=\"mediumPlus\">Configuration de l'application</Text>\n            \n            <DefaultButton\n              text={`Thème: ${app.settings.theme}`}\n              onClick={() => {\n                const newTheme = app.settings.theme === 'auto' ? 'light' : \n                                app.settings.theme === 'light' ? 'dark' : 'auto';\n                dispatch(updateSettings({ theme: newTheme }));\n              }}\n            />\n            \n            <DefaultButton\n              text={`Mode compact: ${app.settings.compactMode ? 'Activé' : 'Désactivé'}`}\n              onClick={() => {\n                dispatch(updateSettings({ compactMode: !app.settings.compactMode }));\n              }}\n            />\n            \n            <DefaultButton\n              text={`Animations: ${app.settings.animationsEnabled ? 'Activées' : 'Désactivées'}`}\n              onClick={() => {\n                dispatch(updateSettings({ animationsEnabled: !app.settings.animationsEnabled }));\n              }}\n            />\n          </Stack>\n        </Panel>\n\n        {/* Notifications Panel */}\n        <Panel\n          isOpen={showNotifications}\n          onDismiss={() => setShowNotifications(false)}\n          type={PanelType.medium}\n          headerText=\"Notifications\"\n        >\n          <Stack tokens={{ childrenGap: 15 }} styles={{ root: { padding: '20px 0' } }}>\n            {app.notifications.length === 0 ? (\n              <Text>Aucune notification</Text>\n            ) : (\n              <>\n                <DefaultButton\n                  text=\"Effacer toutes\"\n                  onClick={() => dispatch(clearNotifications())}\n                />\n                {app.notifications.map((notification) => (\n                  <MessageBar\n                    key={notification.id}\n                    messageBarType={\n                      notification.type === 'success' ? MessageBarType.success :\n                      notification.type === 'error' ? MessageBarType.error :\n                      notification.type === 'warning' ? MessageBarType.warning :\n                      MessageBarType.info\n                    }\n                    onDismiss={() => handleDismissNotification(notification.id)}\n                    isMultiline\n                  >\n                    <strong>{notification.title}</strong><br />\n                    {notification.message}<br />\n                    <small>{new Date(notification.timestamp).toLocaleString('fr-FR')}</small>\n                  </MessageBar>\n                ))}\n              </>\n            )}\n          </Stack>\n        </Panel>\n\n      </Stack>\n    </ThemeProvider>\n  );\n};\n\nexport default DemarcheCompetenceApp;\n"]}