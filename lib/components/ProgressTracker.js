import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Stack, Text, DefaultButton, MessageBar, MessageBarType, ProgressIndicator, Card } from '@fluentui/react';
const cardTokens = { childrenMargin: 12 };
const ProgressTracker = ({ onNavigate }) => {
    // Mock data for demonstration
    const mockProgress = [
        { name: 'Compétences techniques', progress: 0.7, color: '#0078d4' },
        { name: 'Communication', progress: 0.85, color: '#107c10' },
        { name: 'Management', progress: 0.4, color: '#d83b01' },
        { name: 'Innovation', progress: 0.6, color: '#8764b8' }
    ];
    return (_jsxs(Stack, Object.assign({ tokens: { childrenGap: 30 }, styles: { root: { maxWidth: 900, margin: '0 auto' } } }, { children: [_jsxs(Stack, Object.assign({ horizontalAlign: "center", tokens: { childrenGap: 15 } }, { children: [_jsx(Text, Object.assign({ variant: "xxLarge", styles: { root: { fontWeight: 600, color: '#d83b01' } } }, { children: "\uD83D\uDCC8 Suivi des Progr\u00E8s" }), void 0), _jsx(Text, Object.assign({ variant: "large", styles: { root: { textAlign: 'center', color: '#605e5c' } } }, { children: "Consultez votre \u00E9volution et vos r\u00E9sultats" }), void 0)] }), void 0), _jsxs(MessageBar, Object.assign({ messageBarType: MessageBarType.info }, { children: [_jsx("strong", { children: "Aper\u00E7u :" }, void 0), " Voici un aper\u00E7u de votre progression dans les diff\u00E9rents domaines de comp\u00E9tences. Les donn\u00E9es r\u00E9elles seront disponibles apr\u00E8s avoir compl\u00E9t\u00E9 les \u00E9valuations."] }), void 0), _jsx(Stack, Object.assign({ horizontal: true, wrap: true, tokens: { childrenGap: 20 }, horizontalAlign: "center" }, { children: mockProgress.map((item, index) => (_jsx(Card, Object.assign({ tokens: cardTokens, styles: { root: { width: 250, padding: 20 } } }, { children: _jsxs(Stack, Object.assign({ tokens: { childrenGap: 10 } }, { children: [_jsx(Text, Object.assign({ variant: "medium", styles: { root: { fontWeight: 600 } } }, { children: item.name }), void 0), _jsx(ProgressIndicator, { percentComplete: item.progress, description: `${Math.round(item.progress * 100)}% complété`, barHeight: 8 }, void 0), _jsxs(Stack, Object.assign({ horizontal: true, horizontalAlign: "space-between" }, { children: [_jsx(Text, Object.assign({ variant: "small" }, { children: "Niveau actuel" }), void 0), _jsx(Text, Object.assign({ variant: "small", styles: { root: { fontWeight: 600, color: item.color } } }, { children: item.progress >= 0.8 ? 'Expert' :
                                            item.progress >= 0.6 ? 'Confirmé' :
                                                item.progress >= 0.4 ? 'Intermédiaire' : 'Débutant' }), void 0)] }), void 0)] }), void 0) }), index))) }), void 0), _jsx(Card, Object.assign({ tokens: cardTokens, styles: { root: { padding: 30 } } }, { children: _jsxs(Stack, Object.assign({ tokens: { childrenGap: 20 } }, { children: [_jsx(Text, Object.assign({ variant: "xLarge", styles: { root: { fontWeight: 600, textAlign: 'center' } } }, { children: "\uD83D\uDCCA Statistiques Globales" }), void 0), _jsxs(Stack, Object.assign({ horizontal: true, wrap: true, tokens: { childrenGap: 30 }, horizontalAlign: "space-around" }, { children: [_jsxs(Stack, Object.assign({ tokens: { childrenGap: 5 }, horizontalAlign: "center" }, { children: [_jsx(Text, Object.assign({ variant: "xxLarge", styles: { root: { fontWeight: 600, color: '#0078d4' } } }, { children: "0" }), void 0), _jsx(Text, Object.assign({ variant: "medium" }, { children: "Quiz compl\u00E9t\u00E9s" }), void 0)] }), void 0), _jsxs(Stack, Object.assign({ tokens: { childrenGap: 5 }, horizontalAlign: "center" }, { children: [_jsx(Text, Object.assign({ variant: "xxLarge", styles: { root: { fontWeight: 600, color: '#107c10' } } }, { children: "0%" }), void 0), _jsx(Text, Object.assign({ variant: "medium" }, { children: "Score moyen" }), void 0)] }), void 0), _jsxs(Stack, Object.assign({ tokens: { childrenGap: 5 }, horizontalAlign: "center" }, { children: [_jsx(Text, Object.assign({ variant: "xxLarge", styles: { root: { fontWeight: 600, color: '#d83b01' } } }, { children: "0h" }), void 0), _jsx(Text, Object.assign({ variant: "medium" }, { children: "Temps d'apprentissage" }), void 0)] }), void 0), _jsxs(Stack, Object.assign({ tokens: { childrenGap: 5 }, horizontalAlign: "center" }, { children: [_jsx(Text, Object.assign({ variant: "xxLarge", styles: { root: { fontWeight: 600, color: '#8764b8' } } }, { children: "0/12" }), void 0), _jsx(Text, Object.assign({ variant: "medium" }, { children: "Comp\u00E9tences ma\u00EEtris\u00E9es" }), void 0)] }), void 0)] }), void 0)] }), void 0) }), void 0), _jsxs(MessageBar, Object.assign({ messageBarType: MessageBarType.warning }, { children: [_jsx("strong", { children: "En cours de d\u00E9veloppement :" }, void 0), " Les donn\u00E9es de progression r\u00E9elles seront disponibles une fois que vous aurez compl\u00E9t\u00E9 les quiz et \u00E9valuations."] }), void 0), _jsxs(Stack, Object.assign({ horizontal: true, horizontalAlign: "center", tokens: { childrenGap: 15 } }, { children: [_jsx(DefaultButton, { text: "\u2190 Retour au tableau de bord", onClick: () => onNavigate('dashboard'), iconProps: { iconName: 'Back' } }, void 0), _jsx(DefaultButton, { text: "Commencer une \u00E9valuation", onClick: () => onNavigate('quiz-introduction'), iconProps: { iconName: 'TestBeaker' } }, void 0)] }), void 0)] }), void 0));
};
export default ProgressTracker;
//# sourceMappingURL=ProgressTracker.js.map